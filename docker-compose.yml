version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tasks-pro-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tasks_pro
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Backend
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: tasks-pro-api
    restart: unless-stopped
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/tasks_pro?schema=public"
      JWT_SECRET: "your-super-secret-jwt-key-change-this-in-production"
      JWT_EXPIRES_IN: "7d"
      PORT: 3001
      NODE_ENV: production
      FRONTEND_URL: "http://localhost:3000"
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/api/prisma:/app/prisma
    command: sh -c "npx prisma migrate deploy && npx prisma db seed && node dist/main"

  # Web Frontend
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: tasks-pro-web
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: "http://localhost:3001"
      NEXT_PUBLIC_APP_NAME: "Tasks Pro"
      NEXT_PUBLIC_APP_DESCRIPTION: "Gerenciador de tarefas moderno e eficiente"
    ports:
      - "3000:3000"
    depends_on:
      - api

volumes:
  postgres_data:

networks:
  default:
    name: tasks-pro-network
